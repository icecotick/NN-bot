import discord
from discord.ext import commands
from discord.ext.commands import CommandOnCooldown
import random
import os
import asyncpg
import sys
import asyncio
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = os.getenv("DISCORD_TOKEN")
DATABASE_URL = os.getenv("DATABASE_URL") or "postgresql://postgres:KoiwhbfRHSNZZfrsDHRsniDsoRonHDPx@ballast.proxy.rlwy.net:53277/railway"
ROLE_NAME = "–ü–∞—Ç—Ä–∏–æ—Ç"
CUSTOM_ROLE_PRICE = 2000
CRIT_CHANCE = 10
SUCCESS_CHANCE = 40
ADMIN_ROLES = ["—Å–æ–∑–¥–∞—Ç–µ–ª—å", "–≥–ª–∞–≤–Ω—ã–π –º–æ–¥–µ—Ä"]
ROB_CHANCE = 25
ROB_PERCENT = 20
ROB_COOLDOWN = 3600
CASINO_COOLDOWN = 60
BUCKSHOT_COOLDOWN = 1800
CASINO_MULTIPLIERS = {
    2: 35,
    3: 10,
    5: 2,
    0: 53
}

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏–≤–µ–Ω—Ç–æ–≤
EVENT_ACTIVE = False
EVENT_MULTIPLIER = 1.0
EVENT_TYPE = None
EVENT_END_TIME = 0

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –±–∞–∫—à–æ—Ç–∞
active_buckshots = {}
BUCKSHOT_GIF = "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExb21peDBuYWEzazhhb2EweWhzazd3NjkydnZ0dHI5M2x6b3d5aHdtdSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/DQb9xdHQwFl9fvJ1ls/giphy.gif"

def is_admin(member: discord.Member) -> bool:
    return any(role.name.lower() in ADMIN_ROLES for role in member.roles)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω DISCORD_TOKEN")
    sys.exit(1)

if not DATABASE_URL:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω DATABASE_URL")
    sys.exit(1)

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

async def create_db_pool():
    try:
        print("‚åõ –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        pool = await asyncpg.create_pool(
            DATABASE_URL,
            min_size=1,
            max_size=5,
            command_timeout=10,
            server_settings={'application_name': 'discord-bot'}
        )
        async with pool.acquire() as conn:
            await conn.execute("SELECT 1")
            await conn.execute("""
                CREATE TABLE IF NOT EXISTS profiles (
                    user_id BIGINT PRIMARY KEY,
                    bio TEXT DEFAULT '',
                    level INTEGER DEFAULT 1,
                    xp INTEGER DEFAULT 0,
                    achievements TEXT[] DEFAULT ARRAY[]::TEXT[],
                    last_daily TIMESTAMP DEFAULT NULL
                )
            """)
        return pool
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)

@bot.event
async def on_ready():
    try:
        bot.db = await create_db_pool()
        async with bot.db.acquire() as conn:
            await conn.execute("""
                CREATE TABLE IF NOT EXISTS users (
                    user_id BIGINT PRIMARY KEY,
                    balance INTEGER DEFAULT 0
                )
            """)
            await conn.execute("""
                CREATE TABLE IF NOT EXISTS custom_roles (
                    user_id BIGINT PRIMARY KEY,
                    role_id BIGINT,
                    role_name TEXT,
                    role_color TEXT
                )
            """)
        print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        await bot.close()

@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, CommandOnCooldown):
        seconds = int(error.retry_after)
        minutes = seconds // 60
        seconds = seconds % 60
        await ctx.send(f"‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ {minutes}–º {seconds}—Å –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º!")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send(f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–∞: {error.param.name}")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–∞!")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
    else:
        print(f"‚ö† –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {type(error)} - {error}")
        await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")

async def close_db():
    if hasattr(bot, 'db') and not bot.db.is_closed():
        await bot.db.close()
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")

@bot.event
async def on_disconnect():
    await close_db()

async def get_balance(user_id: int) -> int:
    async with bot.db.acquire() as conn:
        result = await conn.fetchrow("SELECT balance FROM users WHERE user_id = $1", user_id)
        return result["balance"] if result else 0

async def update_balance(user_id: int, amount: int):
    async with bot.db.acquire() as conn:
        await conn.execute("""
            INSERT INTO users (user_id, balance)
            VALUES ($1, $2)
            ON CONFLICT (user_id)
            DO UPDATE SET balance = users.balance + $2
        """, user_id, amount)

async def get_custom_role(user_id: int):
    async with bot.db.acquire() as conn:
        return await conn.fetchrow("SELECT * FROM custom_roles WHERE user_id = $1", user_id)

async def create_custom_role(user_id: int, role_id: int, role_name: str, role_color: str):
    async with bot.db.acquire() as conn:
        await conn.execute("""
            INSERT INTO custom_roles (user_id, role_id, role_name, role_color)
            VALUES ($1, $2, $3, $4)
            ON CONFLICT (user_id)
            DO UPDATE SET role_id = $2, role_name = $3, role_color = $4
        """, user_id, role_id, role_name, role_color)

async def get_profile(user_id: int):
    async with bot.db.acquire() as conn:
        profile = await conn.fetchrow("SELECT * FROM profiles WHERE user_id = $1", user_id)
        if not profile:
            await conn.execute("INSERT INTO profiles (user_id) VALUES ($1)", user_id)
            profile = await conn.fetchrow("SELECT * FROM profiles WHERE user_id = $1", user_id)
        return profile

async def update_profile(user_id: int, **kwargs):
    async with bot.db.acquire() as conn:
        set_clause = ", ".join([f"{k} = ${i+2}" for i, k in enumerate(kwargs.keys())])
        values = [user_id] + list(kwargs.values())
        await conn.execute(f"""
            UPDATE profiles
            SET {set_clause}
            WHERE user_id = $1
        """, *values)

async def add_xp(user_id: int, xp_amount: int):
    profile = await get_profile(user_id)
    new_xp = profile['xp'] + xp_amount
    new_level = profile['level']
    
    if new_xp >= new_level * 100:
        new_level += 1
        new_xp = 0
    
    await update_profile(user_id, xp=new_xp, level=new_level)
    return new_level > profile['level']

@bot.command(name="–ø—Ä–æ—Ñ–∏–ª—å")
async def profile(ctx, member: discord.Member = None):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = member or ctx.author
    profile_data = await get_profile(user.id)
    balance = await get_balance(user.id)
    custom_role = await get_custom_role(user.id)
    
    embed = discord.Embed(
        title=f"üìä –ü—Ä–æ—Ñ–∏–ª—å {user.display_name}",
        color=user.color
    )
    embed.set_thumbnail(url=user.avatar.url if user.avatar else user.default_avatar.url)
    
    embed.add_field(name="üíµ –ë–∞–ª–∞–Ω—Å", value=f"{balance} –∫—Ä–µ–¥–∏—Ç–æ–≤", inline=True)
    embed.add_field(name="üìä –£—Ä–æ–≤–µ–Ω—å", value=f"{profile_data['level']}", inline=True)
    embed.add_field(name="üåü –û–ø—ã—Ç", value=f"{profile_data['xp']}/{profile_data['level'] * 100}", inline=True)
    
    bio = profile_data['bio'] or "–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ"
    embed.add_field(name="üìù –û —Å–µ–±–µ", value=bio, inline=False)
    
    if custom_role:
        embed.add_field(
            name="üé≠ –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å", 
            value=f"–ò–º—è: {custom_role['role_name']}\n–¶–≤–µ—Ç: {custom_role['role_color']}", 
            inline=False
        )
    
    achievements = profile_data['achievements'] or []
    if achievements:
        embed.add_field(name="üèÜ –ê—á–∏–≤–∫–∏", value="\n".join(f"‚Ä¢ {ach}" for ach in achievements), inline=False)
    else:
        embed.add_field(name="üèÜ –ê—á–∏–≤–∫–∏", value="–ü–æ–∫–∞ –Ω–µ—Ç –∞—á–∏–≤–æ–∫", inline=False)
    
    await ctx.send(embed=embed)

@bot.command(name="–±–∏–æ")
async def set_bio(ctx, *, bio: str):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é –≤ –ø—Ä–æ—Ñ–∏–ª—å"""
    if len(bio) > 200:
        await ctx.send("‚ùå –ë–∏–æ–≥—Ä–∞—Ñ–∏—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è (–º–∞–∫—Å. 200 —Å–∏–º–≤–æ–ª–æ–≤)")
        return
    
    await update_profile(ctx.author.id, bio=bio)
    await ctx.send("‚úÖ –í–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")

@bot.command(name="–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è")
@persistent_cooldown(1, 86400, commands.BucketType.user)
async def daily(ctx):
    """–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É"""
    reward = random.randint(50, 150)
    level_up = await add_xp(ctx.author.id, 20)
    
    await update_balance(ctx.author.id, reward)
    await update_profile(ctx.author.id, last_daily=datetime.now())
    
    msg = f"üéÅ {ctx.author.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {reward} –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ 20 –æ–ø—ã—Ç–∞!"
    if level_up:
        profile = await get_profile(ctx.author.id)
        msg += f"\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: {profile['level']}"
    
    await ctx.send(msg)

@bot.command(name="–±–∞–∫—à–æ—Ç")
@persistent_cooldown(1, BUCKSHOT_COOLDOWN, commands.BucketType.user)
async def buckshot(ctx, bet: int):
    if bet < 100:
        await ctx.send("‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 100 –∫—Ä–µ–¥–∏—Ç–æ–≤!")
        return
    
    balance = await get_balance(ctx.author.id)
    if balance < bet:
        await ctx.send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
        return

    if ctx.channel.id in active_buckshots:
        await ctx.send("‚ùå –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –¥—É—ç–ª—å!")
        return

    await update_balance(ctx.author.id, -bet)
    active_buckshots[ctx.channel.id] = {
        "host": ctx.author.id,
        "bet": bet,
        "participant": None,
        "message": None,
        "current_chamber": 0,
        "live_bullet_position": random.randint(0, 5),
        "current_player": None
    }

    embed = discord.Embed(
        title="üí• –ë–∞–∫—à–æ—Ç-–¥—É—ç–ª—å –Ω–∞—á–∞—Ç–∞!",
        description=(
            f"{ctx.author.mention} —Å—Ç–∞–≤–∏—Ç **{bet}** –∫—Ä–µ–¥–∏—Ç–æ–≤!\n"
            f"–ü–µ—Ä–≤—ã–π, –∫—Ç–æ –Ω–∞–ø–∏—à–µ—Ç `!–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è`, —Å—Ä–∞–∑–∏—Ç—Å—è —Å –Ω–∏–º.\n"
            f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –∑–∞–±–∏—Ä–∞–µ—Ç **{bet*2}** –∫—Ä–µ–¥–∏—Ç–æ–≤!\n\n"
            f"üî´ –ü—Ä–∞–≤–∏–ª–∞:\n"
            f"- –í –±–∞—Ä–∞–±–∞–Ω–µ 6 –ø–∞—Ç—Ä–æ–Ω–æ–≤\n"
            f"- –¢–æ–ª—å–∫–æ 1 –±–æ–µ–≤–æ–π –ø–∞—Ç—Ä–æ–Ω\n"
            f"- –í—ã–±–∏—Ä–∞–π—Ç–µ, —Å—Ç—Ä–µ–ª—è—Ç—å –≤ —Å–µ–±—è –∏–ª–∏ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞"
        ),
        color=0xff0000
    )
    embed.set_image(url=BUCKSHOT_GIF)
    msg = await ctx.send(embed=embed)
    active_buckshots[ctx.channel.id]["message"] = msg

    await asyncio.sleep(240)
    if ctx.channel.id in active_buckshots and active_buckshots[ctx.channel.id]["participant"] is None:
        await update_balance(ctx.author.id, bet)
        del active_buckshots[ctx.channel.id]
        await ctx.send("üïí –í—Ä–µ–º—è –≤—ã—à–ª–æ! –î—É—ç–ª—å –æ—Ç–º–µ–Ω–µ–Ω–∞.")

@bot.command(name="–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è")
async def join_buckshot(ctx):
    """–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∞–∫—Ç–∏–≤–Ω–æ–π –¥—É—ç–ª–∏ –±–∞–∫—à–æ—Ç"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –¥—É—ç–ª–∏
        if ctx.channel.id not in active_buckshots:
            return await ctx.send("üö´ –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥—É—ç–ª–µ–π!", delete_after=10)
            
        duel = active_buckshots[ctx.channel.id]
        
        # –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –æ–¥–Ω–æ–º –±–ª–æ–∫–µ
        checks = [
            (duel["participant"] is not None, "üö´ –ö—Ç–æ-—Ç–æ —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è!"),
            (ctx.author.id == duel["host"], "üö´ –ù–µ–ª—å–∑—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–≤–æ–µ–π –¥—É—ç–ª–∏!"),
            ((await get_balance(ctx.author.id)) < duel["bet"], f"üö´ –ù—É–∂–Ω–æ {duel['bet']} –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è!")
        ]
        
        for condition, error_msg in checks:
            if condition:
                return await ctx.send(error_msg, delete_after=10)
        
        # –ü—Ä–æ—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è
        await update_balance(ctx.author.id, -duel["bet"])
        duel.update({
            "participant": ctx.author.id,
            "current_player": duel["host"],
            "current_chamber": 0,
            "live_bullet_position": random.randint(0, 5)
        })
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—É—ç–ª–∏
        embed = discord.Embed(
            title=f"üî´ –î—É—ç–ª—å: {duel['bet']*2} –∫—Ä–µ–¥–∏—Ç–æ–≤",
            description=(
                f"**–ò–≥—Ä–æ–∫–∏:**\n"
                f"{ctx.guild.get_member(duel['host']).mention} (–•–æ–¥)\n"
                f"{ctx.author.mention}\n\n"
                f"üî∏ –ü–∞—Ç—Ä–æ–Ω: 1/6\n"
                f"üíÄ –ë–æ–µ–≤–æ–π –ø–∞—Ç—Ä–æ–Ω: –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è"
            ),
            color=0xff0000
        )
        embed.set_image(url=BUCKSHOT_GIF)
        
        view = BuckshotView(duel)
        await duel["message"].edit(embed=embed, view=view)
        await ctx.message.delete()
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ join_buckshot: {str(e)}")
        await ctx.send("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏!", delete_after=10)


class BuckshotView(discord.ui.View):
    def __init__(self, duel_data):
        super().__init__(timeout=300)
        self.duel = duel_data
    
    async def update_interface(self, interaction, description):
        embed = discord.Embed(
            title=f"üî´ –î—É—ç–ª—å: {self.duel['bet']*2} –∫—Ä–µ–¥–∏—Ç–æ–≤",
            description=description,
            color=0xff0000
        )
        embed.set_image(url=BUCKSHOT_GIF)
        await interaction.response.edit_message(embed=embed, view=self)
    
    @discord.ui.button(label="–í—ã—Å—Ç—Ä–µ–ª–∏—Ç—å –≤ —Å–µ–±—è", style=discord.ButtonStyle.red, emoji="üíÄ")
    async def self_shot(self, interaction, button):
        if interaction.user.id != self.duel["current_player"]:
            return await interaction.response.send_message("‚ö†Ô∏è –°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!", ephemeral=True)
        
        if self.duel["current_chamber"] == self.duel["live_bullet_position"]:
            winner_id = self.duel["host"] if interaction.user.id == self.duel["participant"] else self.duel["participant"]
            await update_balance(winner_id, self.duel["bet"]*2)
            
            embed = discord.Embed(
                title="üíÄ –í—ã—Å—Ç—Ä–µ–ª –≤ —Å–µ–±—è!",
                description=f"{interaction.user.mention} –ø—Ä–æ–∏–≥—Ä–∞–ª!\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {interaction.guild.get_member(winner_id).mention}",
                color=0x00ff00
            )
            await interaction.response.edit_message(embed=embed, view=None)
            del active_buckshots[interaction.channel.id]
        else:
            self.duel["current_chamber"] += 1
            self.duel["current_player"] = self.duel["host"] if interaction.user.id == self.duel["participant"] else self.duel["participant"]
            await self.update_interface(
                interaction,
                f"üí® –•–æ–ª–æ—Å—Ç–æ–π –≤—ã—Å—Ç—Ä–µ–ª! –û—Å—Ç–∞–ª–æ—Å—å {6 - self.duel['current_chamber']} –ø–∞—Ç—Ä–æ–Ω–æ–≤\n"
                f"–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥: {interaction.guild.get_member(self.duel['current_player']).mention}"
            )
    
    @discord.ui.button(label="–í—ã—Å—Ç—Ä–µ–ª–∏—Ç—å –≤ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞", style=discord.ButtonStyle.green, emoji="üéØ")
    async def opponent_shot(self, interaction, button):
        if interaction.user.id != self.duel["current_player"]:
            return await interaction.response.send_message("‚ö†Ô∏è –°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!", ephemeral=True)
        
        if self.duel["current_chamber"] == self.duel["live_bullet_position"]:
            await update_balance(interaction.user.id, self.duel["bet"]*2)
            
            embed = discord.Embed(
                title="üéØ –ü–æ–±–µ–¥–∞!",
                description=f"{interaction.user.mention} –≤—ã–∏–≥—Ä–∞–ª {self.duel['bet']*2} –∫—Ä–µ–¥–∏—Ç–æ–≤!",
                color=0x00ff00
            )
            await interaction.response.edit_message(embed=embed, view=None)
            del active_buckshots[interaction.channel.id]
        else:
            self.duel["current_chamber"] += 1
            self.duel["current_player"] = self.duel["host"] if interaction.user.id == self.duel["participant"] else self.duel["participant"]
            await self.update_interface(
                interaction,
                f"üí® –•–æ–ª–æ—Å—Ç–æ–π –≤—ã—Å—Ç—Ä–µ–ª! –û—Å—Ç–∞–ª–æ—Å—å {6 - self.duel['current_chamber']} –ø–∞—Ç—Ä–æ–Ω–æ–≤\n"
                f"–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥: {interaction.guild.get_member(self.duel['current_player']).mention}"
            )
    
    async def on_timeout(self):
        if self.duel["message"].channel.id in active_buckshots:
            await update_balance(self.duel["host"], self.duel["bet"])
            await update_balance(self.duel["participant"], self.duel["bet"])
            await self.duel["message"].edit(content="üïí –î—É—ç–ª—å –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è", embed=None, view=None)
            del active_buckshots[self.duel["message"].channel.id]
            
@bot.command(name="—Å–ª–∞–≤–∞–Ω–Ω")
@persistent_cooldown(1, 7200, commands.BucketType.user)
async def slav_party(ctx):
    user = ctx.author
    role = discord.utils.get(ctx.guild.roles, name=ROLE_NAME)

    if not role:
        await ctx.send('‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
        return

    if role in user.roles:
        await ctx.send(f'üü• {user.mention}, —Ç—ã —É–∂–µ –ü–∞—Ç—Ä–∏–æ—Ç!')
        return

    roll = random.randint(1, 100)
    balance = await get_balance(user.id)

    if roll <= CRIT_CHANCE:
        await user.add_roles(role)
        await update_balance(user.id, 1000)
        await ctx.send(f'üí• –ö–†–ò–¢! {user.mention}, —Ç—ã –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å + 1000 –∫—Ä–µ–¥–∏—Ç–æ–≤! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id)})')
    elif roll <= SUCCESS_CHANCE:
        await user.add_roles(role)
        await update_balance(user.id, 100)
        await ctx.send(f'üü• {user.mention}, —Ç—ã –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å + 100 –∫—Ä–µ–¥–∏—Ç–æ–≤! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id)})')
    else:
        penalty = min(10, balance)
        await update_balance(user.id, -penalty)
        await ctx.send(f'üïä {user.mention}, -{penalty} –∫—Ä–µ–¥–∏—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id)})')
        
@bot.command(name="—Ñ–∞—Ä–º")
@persistent_cooldown(1, 1200, commands.BucketType.user)
async def farm(ctx):
    if not discord.utils.get(ctx.author.roles, name=ROLE_NAME):
        await ctx.send("‚õî –¢–æ–ª—å–∫–æ –¥–ª—è –ü–∞—Ç—Ä–∏–æ—Ç–æ–≤!")
        return

    base_reward = random.randint(20, 50)
    
    if EVENT_ACTIVE and EVENT_TYPE == "—Ñ–∞—Ä–º":
        reward = int(base_reward * EVENT_MULTIPLIER)
        event_bonus = f" (–ò–≤–µ–Ω—Ç x{EVENT_MULTIPLIER})"
    else:
        reward = base_reward
        event_bonus = ""
    
    level_up = await add_xp(ctx.author.id, 5)
    await update_balance(ctx.author.id, reward)
    
    msg = f"üåæ {ctx.author.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {reward} –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ 5 –æ–ø—ã—Ç–∞{event_bonus}!"
    if level_up:
        profile = await get_profile(ctx.author.id)
        msg += f"\nüéâ –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: {profile['level']}"
    
    await ctx.send(msg)

@bot.command(name="–±–∞–ª–∞–Ω—Å")
@commands.cooldown(rate=1, per=5, type=commands.BucketType.user)
async def balance(ctx):
    bal = await get_balance(ctx.author.id)
    await ctx.send(f'üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {bal} –∫—Ä–µ–¥–∏—Ç–æ–≤')

@bot.command(name="–ø–µ—Ä–µ–≤–µ—Å—Ç–∏")
async def transfer(ctx, member: discord.Member, amount: int):
    if amount <= 0:
        await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
        return

    sender_balance = await get_balance(ctx.author.id)
    if sender_balance < amount:
        await ctx.send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
        return

    await update_balance(ctx.author.id, -amount)
    await update_balance(member.id, amount)
    await ctx.send(f'‚úÖ {ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª {amount} –∫—Ä–µ–¥–∏—Ç–æ–≤ {member.mention}!')

@bot.command(name="—Ç–æ–ø")
@commands.cooldown(1, 10, commands.BucketType.user)
async def top(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É"""
    try:
        async with bot.db.acquire() as conn:
            top_users = await conn.fetch(
                "SELECT user_id, balance FROM users ORDER BY balance DESC LIMIT 10"
            )

        if not top_users:
            return await ctx.send("üòî –í —Ç–æ–ø–µ –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç.")

        leaderboard = []
        for i, record in enumerate(top_users, start=1):
            try:
                user = await bot.fetch_user(record['user_id'])
                leaderboard.append(f"{i}. {user.display_name} ‚Äî {record['balance']} –∫—Ä–µ–¥–∏—Ç–æ–≤")
            except discord.NotFound:
                leaderboard.append(f"{i}. [–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] ‚Äî {record['balance']} –∫—Ä–µ–¥–∏—Ç–æ–≤")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {record['user_id']}: {e}")
                leaderboard.append(f"{i}. [–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏] ‚Äî {record['balance']} –∫—Ä–µ–¥–∏—Ç–æ–≤")

        embed = discord.Embed(
            title="üèÜ –¢–æ–ø-10 –±–æ–≥–∞—Ç–µ–π—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤",
            description="\n".join(leaderboard),
            color=0xffd700
        )
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å–∏–ª: {ctx.author.display_name}")
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ '—Ç–æ–ø': {e}")
        await ctx.send("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
@bot.command(name="–¥–æ–ø–∫—Ä–µ–¥–∏—Ç")
async def add_credits(ctx, member: discord.Member, amount: int):
    if not is_admin(ctx.author):
        await ctx.send("‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
        return
    
    if amount <= 0:
        await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
        return
    
    await update_balance(member.id, amount)
    await ctx.send(f"‚úÖ –ê–¥–º–∏–Ω {ctx.author.mention} –¥–æ–±–∞–≤–∏–ª {amount} –∫—Ä–µ–¥–∏—Ç–æ–≤ {member.mention}")

@bot.command(name="–º–∏–Ω—É—Å–∫—Ä–µ–¥–∏—Ç")
async def remove_credits(ctx, member: discord.Member, amount: int):
    if not is_admin(ctx.author):
        await ctx.send("‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
        return
    
    if amount <= 0:
        await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
        return
    
    current_balance = await get_balance(member.id)
    if current_balance < amount:
        await ctx.send(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ {current_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤!")
        return
    
    await update_balance(member.id, -amount)
    await ctx.send(f"‚úÖ –ê–¥–º–∏–Ω {ctx.author.mention} —Å–Ω—è–ª {amount} –∫—Ä–µ–¥–∏—Ç–æ–≤ —É {member.mention}")

@bot.command(name="–æ–≥—Ä–∞–±–∏—Ç—å")
@persistent_cooldown(rate=1, per=ROB_COOLDOWN, type=commands.BucketType.user)
async def rob(ctx, member: discord.Member):
    thief = ctx.author
    victim = member
    
    if thief == victim:
        await ctx.send("‚ùå –ù–µ–ª—å–∑—è –≥—Ä–∞–±–∏—Ç—å —Å–µ–±—è!")
        return
    
    thief_balance = await get_balance(thief.id)
    victim_balance = await get_balance(victim.id)
    
    if victim_balance < 10:
        await ctx.send(f"‚ùå –£ {victim.mention} —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∫—Ä–µ–¥–∏—Ç–æ–≤!")
        return
    
    steal_amount = max(1, int(victim_balance * (ROB_PERCENT / 100)))
    
    if random.randint(1, 100) <= ROB_CHANCE:
        await update_balance(victim.id, -steal_amount)
        await update_balance(thief.id, steal_amount)
        await ctx.send(
            f"üí∞ {thief.mention} –æ–≥—Ä–∞–±–∏–ª {victim.mention} –∏ —É–∫—Ä–∞–ª {steal_amount} –∫—Ä–µ–¥–∏—Ç–æ–≤!\n"
            f"üí∏ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {await get_balance(thief.id)}"
        )
    else:
        penalty = max(1, int(thief_balance * (ROB_PERCENT / 100)))
        await update_balance(thief.id, -penalty)
        await ctx.send(
            f"üö® {thief.mention} –ø–æ–ø–∞–ª—Å—è –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–≥—Ä–∞–±–∏—Ç—å {victim.mention}!\n"
            f"üí∏ –®—Ç—Ä–∞—Ñ: {penalty} –∫—Ä–µ–¥–∏—Ç–æ–≤\n"
            f"üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {await get_balance(thief.id)}"
        )

@bot.command(name="–≤–µ–∑–µ–Ω–∏–µ")
@persistent_cooldown(rate=1, per=CASINO_COOLDOWN, type=commands.BucketType.user)
async def casino(ctx, amount: int):
    user = ctx.author
    balance = await get_balance(user.id)
    
    if amount <= 0:
        await ctx.send("‚ùå –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
        return
    
    if balance < amount:
        await ctx.send(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –í–∞—à –±–∞–ª–∞–Ω—Å: {balance}")
        return
    
    multipliers = list(CASINO_MULTIPLIERS.keys())
    weights = list(CASINO_MULTIPLIERS.values())
    result = random.choices(multipliers, weights=weights, k=1)[0]
    
    if result == 0:
        await update_balance(user.id, -amount)
        await ctx.send(f"üé∞ {user.mention} —Å—Ç–∞–≤–∏—Ç {amount} –∏... –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç! üí∏")
    else:
        win = amount * result
        await update_balance(user.id, win)
        await ctx.send(f"üé∞ {user.mention} —Å—Ç–∞–≤–∏—Ç {amount} –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç x{result}! üéâ +{win} –∫—Ä–µ–¥–∏—Ç–æ–≤!")
        
@bot.command(name="–∏–≤–µ–Ω—Ç_—Å—Ç–∞—Ä—Ç")
@commands.has_permissions(administrator=True)
async def start_event(ctx, hours: int, multiplier: float, event_type: str = "—Ñ–∞—Ä–º"):
    global EVENT_ACTIVE, EVENT_MULTIPLIER, EVENT_TYPE, EVENT_END_TIME
    
    EVENT_ACTIVE = True
    EVENT_MULTIPLIER = multiplier
    EVENT_TYPE = event_type.lower()
    EVENT_END_TIME = time.time() + hours * 3600
    
    embed = discord.Embed(
        title="üéä –ò–í–ï–ù–¢ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!",
        description=f"{event_type.upper()} –¥–∞–µ—Ç x{multiplier} –Ω–∞–≥—Ä–∞–¥—ã!\n–î–µ–π—Å—Ç–≤—É–µ—Ç {hours} —á–∞—Å–æ–≤.",
        color=0xffd700
    )
    await ctx.send(embed=embed)

@bot.command(name="–∏–≤–µ–Ω—Ç_—Å—Ç–∞—Ç—É—Å")
async def event_status(ctx):
    if EVENT_ACTIVE:
        remaining = int((EVENT_END_TIME - time.time()) // 60)
        embed = discord.Embed(
            title="üì¢ –ê–∫—Ç–∏–≤–Ω—ã–π –∏–≤–µ–Ω—Ç",
            description=f"–¢–∏–ø: {EVENT_TYPE}\n–ú–Ω–æ–∂–∏—Ç–µ–ª—å: x{EVENT_MULTIPLIER}\n–û—Å—Ç–∞–ª–æ—Å—å: {remaining} –º–∏–Ω—É—Ç",
            color=0x00ff00
        )
    else:
        embed = discord.Embed(
            title="‚ÑπÔ∏è –ò–≤–µ–Ω—Ç–æ–≤ –Ω–µ—Ç",
            description="–ê–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π !–∏–≤–µ–Ω—Ç_—Å—Ç–∞—Ä—Ç",
            color=0xff0000
        )
    await ctx.send(embed=embed)
    
@bot.command(name="–º–∞–≥–∞–∑–∏–Ω")
async def shop(ctx):
    shop_text = f"""
üõç –ú–∞–≥–∞–∑–∏–Ω:

üé® !–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ù–∞–∑–≤–∞–Ω–∏–µ" #–¶–≤–µ—Ç - –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å ({CUSTOM_ROLE_PRICE} –∫—Ä–µ–¥–∏—Ç–æ–≤)
–ü—Ä–∏–º–µ—Ä: !–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ë–æ–≥–∞—á" #ff0000

üéÆ !–±–∞–∫—à–æ—Ç —Å—É–º–º–∞ - –î—É—ç–ª—å 1v1 (30–º –∫–¥)
üé∞ !–≤–µ–∑–µ–Ω–∏–µ —Å—É–º–º–∞ - –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –∫–∞–∑–∏–Ω–æ

üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {await get_balance(ctx.author.id)} –∫—Ä–µ–¥–∏—Ç–æ–≤
"""
    await ctx.send(shop_text)

@bot.command(name="–∫—É–ø–∏—Ç—å—Ä–æ–ª—å")
async def buy_role(ctx, role_name: str, role_color: str):
    user = ctx.author
    balance = await get_balance(user.id)
    
    if balance < CUSTOM_ROLE_PRICE:
        await ctx.send(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ {CUSTOM_ROLE_PRICE} –∫—Ä–µ–¥–∏—Ç–æ–≤.")
        return
    
    existing_role = await get_custom_role(user.id)
    if existing_role:
        try:
            old_role = ctx.guild.get_role(existing_role['role_id'])
            if old_role:
                await old_role.delete()
        except:
            pass
    
    try:
        color = discord.Color.from_str(role_color)
        new_role = await ctx.guild.create_role(
            name=role_name,
            color=color,
            reason=f"–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å –¥–ª—è {user.name}"
        )
        await user.add_roles(new_role)
        await create_custom_role(user.id, new_role.id, role_name, role_color)
        await update_balance(user.id, -CUSTOM_ROLE_PRICE)
        await ctx.send(f"‚úÖ {user.mention}, –≤—ã –∫—É–ø–∏–ª–∏ —Ä–æ–ª—å {new_role.mention}!")
    except ValueError:
        await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞! –ü—Ä–∏–º–µ—Ä: #ff0000")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–æ–ª–∏!")

@bot.command(name="–ø–æ–º–æ—â—å")
async def help_command(ctx):
    help_text = f"""
üìú –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:

üìä –ü—Ä–æ—Ñ–∏–ª—å:
!–ø—Ä–æ—Ñ–∏–ª—å [@—é–∑–µ—Ä] - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
!–±–∏–æ —Ç–µ–∫—Å—Ç - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é
!–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è - –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É (24—á –∫–¥)

üéÆ –ò–≥—Ä–æ–≤—ã–µ:
!—Å–ª–∞–≤–∞–Ω–Ω - –°—Ç–∞—Ç—å –ü–∞—Ç—Ä–∏–æ—Ç–æ–º (2—á –∫–¥)
!—Ñ–∞—Ä–º - –ó–∞—Ä–∞–±–æ—Ç–æ–∫ (20–º –∫–¥)
!–±–∞–∫—à–æ—Ç —Å—É–º–º–∞ - –î—É—ç–ª—å 1v1 (30–º –∫–¥)
`!–≤–µ–∑–µ–Ω–∏–µ —Å—É–º–º–∞` - –∏–≥—Ä–∞ –≤ –≤–µ–∑–µ–Ω–∏–µ (1–º –∫–¥)
`!–æ–≥—Ä–∞–±–∏—Ç—å @—é–∑–µ—Ä` - –ü–æ–ø—ã—Ç–∫–∞ –∫—Ä–∞–∂–∏ (1—á –∫–¥)

üí∞ –≠–∫–æ–Ω–æ–º–∏–∫–∞:
`!–±–∞–ª–∞–Ω—Å` - –í–∞—à –±–∞–ª–∞–Ω—Å
`!–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ @—é–∑–µ—Ä —Å—É–º–º–∞` - –ü–µ—Ä–µ–≤–æ–¥
`!—Ç–æ–ø` - –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤
`!–º–∞–≥–∞–∑–∏–Ω` - –ú–∞–≥–∞–∑–∏–Ω
`!–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ù–∞–∑–≤" #–¶–≤–µ—Ç` - –ö—É–ø–∏—Ç—å —Ä–æ–ª—å

üõ† –ê–¥–º–∏–Ω:
`!–¥–æ–ø–∫—Ä–µ–¥–∏—Ç @—é–∑–µ—Ä —Å—É–º–º–∞` - –î–æ–±–∞–≤–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
`!–º–∏–Ω—É—Å–∫—Ä–µ–¥–∏—Ç @—é–∑–µ—Ä —Å—É–º–º–∞` - –°–Ω—è—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
`!–∏–≤–µ–Ω—Ç_—Å—Ç–∞—Ä—Ç` - –°—Ç–∞—Ä—Ç –∏–≤–µ–Ω—Ç–∞

–ü—Ä–∏–º–µ—Ä—ã:
`!–ø—Ä–æ—Ñ–∏–ª—å @–ò–≥—Ä–æ–∫`
`!–±–∏–æ –õ—é–±–ª—é –∏–≥—Ä–∞—Ç—å –≤ –±–∞–∫—à–æ—Ç!`
`!–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ë–æ–≥–∞—á" #ff0000`
`!–±–∞–∫—à–æ—Ç 1000`
`!–∏–≤–µ–Ω—Ç_—Å—Ç–∞—Ä—Ç 2 2.5 —Ñ–∞—Ä–º` (2 —á–∞—Å–∞, x2.5 –∫ —Ñ–∞—Ä–º—É)
"""
    await ctx.send(help_text)

def run_bot():
    try:
        loop = asyncio.get_event_loop()
        loop.run_until_complete(bot.start(TOKEN))
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        if loop.is_running():
            loop.run_until_complete(close_db())
        loop.close()

if __name__ == "__main__":
    run_bot()
